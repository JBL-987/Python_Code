# -*- coding: utf-8 -*-
"""AOL_scientific_computing.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gDml9jD4XAibFlg1C1Tm5YcQ1wR8yfTs
"""

from google.colab import drive
drive.mount('/content/drive')

import sys
sys.path.append('/content/drive/My Drive/AOL_ScientificComputing')

import pandas as pd

data = pd.read_excel('/content/drive/My Drive/AOL_ScientificComputing/aol_data.xlsx', header = None)
row = data.iloc[1]
data_vertical = pd.DataFrame({
    "Month": row.index + 1,
    "Production": row.values
})

data_vertical['Production'] = pd.to_numeric(data_vertical['Production'], errors='coerce')
data_vertical = data_vertical.dropna(subset=['Production'])

data_vertical.to_excel('/content/drive/My Drive/AOL_ScientificComputing/aol_data_vertical.xlsx', index=False)

import numpy as np
import matplotlib.pyplot as plt

x = data_vertical['Month'].values.astype(float)
y = data_vertical['Production'].values.astype(float)

plt.plot(x, y, marker='o', label='Production')
plt.title('EGIER warehouse capacity')
plt.xlabel('Month')
plt.ylabel('Production')
plt.grid(True)
plt.legend()
plt.show()

coeffs = np.polyfit(x, y, deg=3)
poly = np.poly1d(coeffs)

x_fine = np.linspace(x.min(), x.max(), 500)
y_poly = poly(x_fine)

plt.plot(x, y, '.', label='Original data')
plt.plot(x_fine, y_poly, '-', label='Polynomial Trend (deg=3)', color='red')
plt.title('Non-Linear Polynomial Trend')
plt.xlabel('Month')
plt.ylabel('Production')
plt.legend()
plt.grid(True)
plt.show()

print("result:")
print(np.round(poly, 3))

y_mean = np.mean(y)
y_pred = poly(x)
residuals = y - y_pred
sse = np.sum(residuals**2)
sst = np.sum((y - y_mean)**2)
r_squared = 1 - (sse / sst)

print(f"R-squared: {round(r_squared, 3)}")

new_poly = poly - 25000

roots = np.roots(new_poly)

real_roots = roots[np.isreal(roots)].real

last_month = x.max()
future_root = real_roots[real_roots > last_month]

if future_root.size > 0:
    target_month = future_root.min()
    start_month = target_month - 13
    print(f"Production for 25.000 in {round(target_month)}")
    print(f"EGIER have to make the warehouse in {round(start_month)}")
else:
    print("Model can't predict more than 25.000")